section
  h3(id='app-settings') settings

  p.
    The following settings will alter how Express behaves:

  ul
    li
      code env 
      | Environment mode, defaults to <code>process.env.NODE_ENV</code> (NODE_ENV environment variable) or "development"
    li
      code trust proxy 
      | Indicate that the app is sitting behind a front-facing proxy, and the <code>X-Forwarded-*</code> headers may be trusted for determining the connection and the IP address of the client. It must, however, be noted that, the <code>X-Forwarded-*</code> headers are easily spoofed and the detected IP addresses are unreliable.

      p <code>trust proxy</code> is disabled by default. When enabled, Express attempts to determine the IP address of the client which is connected through the front-facing proxy, or a series of proxies. The <code>req.ips</code> property, then, contains an array of IP addresses the client is connected through. It can be enabled using either of the following values.

      table.doctable
        thead
          tr
            th Type
            th Value
        tbody
          tr
            td
              strong Boolean
            td
              p If <code>true</code>, the client's IP address is understood as the left-most entry in the <code>X-Forwarded-*</code> header.
              p If <code>false</code>, the app is understood as directly facing the Internet and the client's IP address is derived from <code>req.connection.remoteAddress</code>. This is the default setting.
          tr
            td
              strong IP addresses
            td
              p An IP address, subnet, or an array of IP addresses, and subnets to trust.

              p The following is the list of pre-configured subnet names.
                ul
                  li loopback -  <code>127.0.0.1/8</code>, <code>::1/128</code>
                  li linklocal - <code>169.254.0.0/16</code>, <code>fe80::/10</code>
                  li uniquelocal - <code>10.0.0.0/8</code>, <code>172.16.0.0/12</code>, <code>192.168.0.0/16</code>, <code>fc00::/7</code>
              p The IP addresses can be set in the following ways.
              +js.
                app.set('trust proxy', 'loopback') // specify a single subnet
                app.set('trust proxy', 'loopback, 123.123.123.123') // specify a subnet and an address
                app.set('trust proxy', 'loopback, linklocal, uniquelocal') // specify multiple subnets as CSV
                app.set('trust proxy', ['loopback', 'linklocal', 'uniquelocal']) // specify multiple subnets as an array

              p When specified, the IP addresses or the subnets are excluded from the address determination process, and the untrusted IP address nearest to the application server is determined as the client's IP address.
          tr
            td
              strong Number
            td Trust the <code>n</code>th hop from the front-facing proxy server as the client.
          tr
            td
              strong Function
            td Custom trust implementation. Use this only as a last resort.

              +js.
                app.set('trust proxy', function (ip) {
                  if (ip === '127.0.0.1' || ip === '123.123.123.123') return true; // trusted IPs
                  else return false;
                })

      p The <code>trust proxy</code> setting is implemented using the <a href="https://www.npmjs.org/package/proxy-addr">proxy-addr</a> package, look up its documentation for further details.

    li
      code subdomain offset 
      | The number of dot-separated parts of the host to remove to access subdomain, two by default
    li
      code jsonp callback name 
      | Changes the default callback name of <code>?callback=</code>
    li
      code json replacer 
      | JSON replacer callback, null by default
    li
      code case sensitive routing 
      | Enable case sensitivity, disabled by default, treating "/Foo" and "/foo" as the same
    li
      code strict routing 
      | Enable strict routing, by default "/foo" and "/foo/" are treated the same by the router
    li
      code view cache 
      | Enables view template compilation caching, enabled in production by default
    li
      code view engine 
      | The default engine extension to use when omitted
    li
      code views 
      | The view directory path, defaulting to "process.cwd() + '/views'"
    li
      code query parser 
      | The query parser to use - "simple" or "extended", defaults to "extended". The simple query parser is based on node's native query parser, <a href="http://nodejs.org/api/querystring.html">querystring</a>. The extended query parser is based on <a href="https://www.npmjs.org/package/qs">qp</a>.
    li
      code x-powered-by 
      | Enables the <code>X-Powered-By: Express</code> HTTP header, enabled by default
    
